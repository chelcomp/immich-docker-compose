# .env template file for Immich
# This file serves as a guide for the required environment variables.
# Copy this file to .env and fill in the values.

# -----------------------------------------------------------------------------------
# Command Line Tools (Power Tools) and API
# -----------------------------------------------------------------------------------

# Google Maps API Key (Optional)
# Used to display maps in the Immich interface.
# To get a key, go to the Google Cloud Console, create a project, and enable the "Maps JavaScript API".
# Documentation: https://developers.google.com/maps/documentation/javascript/get-api-key
GOOGLE_MAPS_API_KEY=

# Immich API Key (Optional)
# Used to authenticate with the Immich API for scripts or integrations.
# Can be generated in the Immich web interface, under "Account Settings" -> "API Keys".
IMMICH_API_KEY=

# External Immich URL
# The URL you use to access Immich from outside your local network (e.g., https://immich.your-site.com).
# Important for shared links and other features to work correctly.
EXTERNAL_IMMICH_URL=

# Power Tools Endpoint URL (Optional)
# If you use the Immich "Power Tools", enter the endpoint here.
POWER_TOOLS_ENDPOINT_URL=

# Immich Version
# Defines the Docker image version to be used. 'release' uses the latest stable version.
IMMICH_VERSION=release

# -----------------------------------------------------------------------------------
# File Storage
# -----------------------------------------------------------------------------------

# IMPORTANT NOTE:
# Change the value of UPLOAD_LOCATION to a VALID path on your host system.
# This is the primary location where your new photos and videos (uploads) will be stored.
# Linux Example: UPLOAD_LOCATION=/mnt/media/immich/upload
# Windows Example: UPLOAD_LOCATION=E:/immich_photos/upload
UPLOAD_LOCATION=/opt/immich/immich-data

# External Library Location (Optional)
# Use to import an existing library of photos and videos.
# Immich will scan this directory but will not move or alter the original files.
# Linux Example: LIBRARY_LOCATION=/mnt/media/my_photos
LIBRARY_LOCATION=

# -----------------------------------------------------------------------------------
# PostgreSQL Database Configuration
# These values are used by the PostgreSQL container to initialize the database.
# -----------------------------------------------------------------------------------

# PostgreSQL Hostname
# The service name of the PostgreSQL container in docker-compose. Do not change unless you have customized docker-compose.yml.
DB_HOSTNAME=immich_postgres

# Database User
# Username to access the database.
DB_USERNAME=postgres

# Database Password
# Password for the database user. It is highly recommended to change this to a strong password.
DB_PASSWORD=postgres

# Database Name
# The name of the database that Immich will use.
DB_DATABASE_NAME=immich

# PostgreSQL Vector Extension
# Defines the extension to be used for semantic search. 'pgvecto.rs' is the current default.
DB_VECTOR_EXTENSION=pgvecto.rs

# -----------------------------------------------------------------------------------
# Immich's Connection to the Database
# The Immich Server will use this string to connect to the database.
# -----------------------------------------------------------------------------------
DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOSTNAME}:${DB_PORT:-5432}/${DB_DATABASE_NAME}

# -----------------------------------------------------------------------------------
# Immich's Connection to Redis
# Immich uses Redis for caching and task queue management.
# -----------------------------------------------------------------------------------

# Redis Hostname
# The service name of the Redis container in docker-compose. Do not change unless you have customized it.
REDIS_HOSTNAME=immich_redis

# Redis Port
REDIS_PORT=6379

# Redis Connection URL
REDIS_URL=redis://${REDIS_HOSTNAME}:${REDIS_PORT}

# -----------------------------------------------------------------------------------
# General and Security Settings
# -----------------------------------------------------------------------------------

# JWT (JSON Web Token) Secret
# Used to sign session tokens. Change to a long, random string for better security.
# You can generate one using: openssl rand -base64 32
JWT_SECRET=supersecretjwtkey

# Log Level
# Defines how detailed the logs will be. Options: fatal, error, warn, info, debug, verbose.
LOG_LEVEL=info

# Time Zone
# Sets the time zone for the application. Important for media dates and times to be displayed correctly.
# Example: America/Sao_Paulo, Europe/London, America/New_York
TZ=America/Sao_Paulo

# -----------------------------------------------------------------------------------
# Machine Learning (Image and Object Recognition)
# -----------------------------------------------------------------------------------

# Machine Learning Service Host
# The service name of the ML container in docker-compose. Do not change unless you have customized it.
MACHINE_LEARNING_HOST=machine-learning

# Machine Learning Service Port
MACHINE_LEARNING_PORT=3003

# Matplotlib Cache Directory
# Used by the machine learning service to store cache.
MPLCONFIGDIR=/cache/matplotlib

# -----------------------------------------------------------------------------------
# Performance Tuning
# -----------------------------------------------------------------------------------

# Typesense (Search) Concurrency
# Number of threads for the search service. Adjust based on your CPU cores.
TYPESENSE_CONCURRENCY=2

# Immich Job Concurrency
# Number of background tasks (like transcoding, thumbnail generation) that run simultaneously.
# A good starting point is half the number of your CPU cores.
IMMICH_JOB_CONCURRENCY=2

# Hardware Video Transcoding Filter (Optional)
# Used for hardware acceleration in video transcoding with NVIDIA GPUs (NVENC).
# Requires additional configuration in the docker-compose.yml file.
IMMICH_TRANSCODE_HW_VIDEO_FILTER=format=nv12,hwupload=extra_hw_frames=64
