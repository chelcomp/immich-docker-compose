# Arquivo de template .env para o Immich
# Este arquivo serve como um guia para as variáveis de ambiente necessárias.
# Copie este arquivo para .env e preencha os valores.

# -----------------------------------------------------------------------------------
# Ferramentas de Linha de Comando (Power Tools) e API
# -----------------------------------------------------------------------------------

# Chave da API do Google Maps (Opcional)
# Usada para exibir mapas na interface do Immich.
# Para obter uma chave, acesse o Google Cloud Console, crie um projeto e ative a "Maps JavaScript API".
# Documentação: https://developers.google.com/maps/documentation/javascript/get-api-key
GOOGLE_MAPS_API_KEY=

# Chave de API do Immich (Opcional)
# Usada para autenticar com a API do Immich para scripts ou integrações.
# Pode ser gerada na interface web do Immich, em "Account Settings" -> "API Keys".
IMMICH_API_KEY=

# URL Externa do Immich
# A URL que você usa para acessar o Immich de fora da sua rede local (ex: https://immich.seusite.com).
# Importante para que os links compartilhados e outras funcionalidades funcionem corretamente.
EXTERNAL_IMMICH_URL=

# URL do Endpoint do Power Tools (Opcional)
# Se você usa as ferramentas "Power Tools" do Immich, insira o endpoint aqui.
POWER_TOOLS_ENDPOINT_URL=

# Versão do Immich
# Define a versão da imagem Docker a ser usada. 'release' usa a última versão estável.
IMMICH_VERSION=release

# -----------------------------------------------------------------------------------
# Armazenamento de Arquivos
# -----------------------------------------------------------------------------------

# NOTA IMPORTANTE:
# Altere o valor de UPLOAD_LOCATION para um caminho VÁLIDO no seu sistema host.
# Este é o local principal onde suas fotos e vídeos novos (feitos upload) serão armazenados.
# Exemplo para Linux: UPLOAD_LOCATION=/mnt/media/immich/upload
# Exemplo para Windows: UPLOAD_LOCATION=E:/immich_photos/upload
UPLOAD_LOCATION=/opt/immich/immich-data

# Local da Biblioteca Externa (Opcional)
# Use para importar uma biblioteca de fotos e vídeos já existente.
# O Immich irá escanear este diretório, mas não moverá ou alterará os arquivos originais.
# Exemplo para Linux: LIBRARY_LOCATION=/mnt/media/minhas_fotos
LIBRARY_LOCATION=

# -----------------------------------------------------------------------------------
# Configuração do Banco de Dados PostgreSQL
# Estes valores são usados pelo contêiner do PostgreSQL para inicializar o banco.
# -----------------------------------------------------------------------------------

# Hostname do PostgreSQL
# Nome do serviço do contêiner do PostgreSQL no docker-compose. Não altere a menos que tenha personalizado o docker-compose.yml.
DB_HOSTNAME=immich_postgres

# Usuário do Banco de Dados
# Nome de usuário para acessar o banco de dados.
DB_USERNAME=postgres

# Senha do Banco de Dados
# Senha para o usuário do banco de dados. É altamente recomendável alterar para uma senha forte.
DB_PASSWORD=postgres

# Nome do Banco de Dados
# O nome do banco de dados que o Immich usará.
DB_DATABASE_NAME=immich

# Extensão de Vetores do PostgreSQL
# Define a extensão a ser usada para busca semântica. 'pgvecto.rs' é o padrão atual.
DB_VECTOR_EXTENSION=pgvecto.rs

# -----------------------------------------------------------------------------------
# Conexão do Immich com o Banco de Dados
# O Immich Server usará esta string para se conectar ao banco de dados.
# -----------------------------------------------------------------------------------
DATABASE_URL=postgres://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOSTNAME}:${DB_PORT:-5432}/${DB_DATABASE_NAME}

# -----------------------------------------------------------------------------------
# Conexão do Immich com o Redis
# O Immich usa o Redis para cache e gerenciamento de filas de tarefas.
# -----------------------------------------------------------------------------------

# Hostname do Redis
# Nome do serviço do contêiner do Redis no docker-compose. Não altere a menos que tenha personalizado.
REDIS_HOSTNAME=immich_redis

# Porta do Redis
REDIS_PORT=6379

# URL de Conexão do Redis
REDIS_URL=redis://${REDIS_HOSTNAME}:${REDIS_PORT}

# -----------------------------------------------------------------------------------
# Configurações Gerais e de Segurança
# -----------------------------------------------------------------------------------

# Segredo JWT (JSON Web Token)
# Usado para assinar tokens de sessão. Altere para uma string longa e aleatória para maior segurança.
# Você pode gerar uma usando: openssl rand -base64 32
JWT_SECRET=supersecretjwtkey

# Nível de Log
# Define o quão detalhados serão os logs. Opções: fatal, error, warn, info, debug, verbose.
LOG_LEVEL=info

# Fuso Horário
# Define o fuso horário para a aplicação. Importante para que as datas e horas das mídias sejam exibidas corretamente.
# Exemplo: America/Sao_Paulo, Europe/London, America/New_York
TZ=America/Sao_Paulo

# -----------------------------------------------------------------------------------
# Machine Learning (Reconhecimento de Imagens e Objetos)
# -----------------------------------------------------------------------------------

# Host do Serviço de Machine Learning
# Nome do serviço do contêiner de ML no docker-compose. Não altere a menos que tenha personalizado.
MACHINE_LEARNING_HOST=machine-learning

# Porta do Serviço de Machine Learning
MACHINE_LEARNING_PORT=3003

# Diretório de Cache do Matplotlib
# Usado pelo serviço de machine learning para armazenar cache.
MPLCONFIGDIR=/cache/matplotlib

# -----------------------------------------------------------------------------------
# Ajustes de Performance
# -----------------------------------------------------------------------------------

# Concorrência do Typesense (Busca)
# Número de threads para o serviço de busca. Ajuste com base nos núcleos da sua CPU.
TYPESENSE_CONCURRENCY=2

# Concorrência de Tarefas do Immich (Jobs)
# Número de tarefas em segundo plano (como transcodificação, geração de miniaturas) que rodam simultaneamente.
# Um bom ponto de partida é metade do número de núcleos da sua CPU.
IMMICH_JOB_CONCURRENCY=2

# Filtro de Hardware para Transcodificação de Vídeo (Opcional)
# Usado para aceleração de hardware na transcodificação de vídeos com GPUs NVIDIA (NVENC).
# Requer configuração adicional no arquivo docker-compose.yml.
IMMICH_TRANSCODE_HW_VIDEO_FILTER=format=nv12,hwupload=extra_hw_frames=64